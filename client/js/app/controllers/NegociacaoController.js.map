{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_ordemAtual","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","error","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastrar","mensagem","_limpaFormulario","erro","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","apaga","esvazia","importa","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\n    \n    constructor() {\n        let $ = document.querySelector.bind(document);\n        \n        this._ordemAtual = '';\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n        \n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(),\n            new NegociacoesView($('#negociacoesView')),\n            'adiciona', 'esvazia', 'ordena', 'inverte'\n        );\n  \n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView($('#mensagemView')),\n            'texto',\n        );\n        \n        this._service = new NegociacaoService();\n\n        this._init();\n    }\n\n    _init() {\n        this._service\n            .lista()\n            .then(negociacoes => \n                negociacoes.forEach(negociacao =>\n                    this._listaNegociacoes.adiciona(negociacao)))\n            .catch(error => this._mensagem.texto = error);\n\n        setInterval(() => {\n            this.importaNegociacoes();\n        }, 5000);\n    }\n\n    adiciona(event) {\n        event.preventDefault();\n\n        const negociacao = this._criaNegociacao();\n\n        this._service\n            .cadastrar(negociacao)\n            .then((mensagem) => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = mensagem;\n                this._limpaFormulario();\n            })\n            .catch(error => this._mensagem.texto = erro);\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n    }\n\n    _limpaFormulario() {\n        this._inputData.value = \"\";\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n\n        this._inputData.focus();\n    }\n\n    apaga() {\n        new NegociacaoService()\n            .apaga()\n            .then(mensagem => {\n                this._listaNegociacoes.esvazia();\n                this._mensagem.texto = mensagem;\n            })\n            .catch = error => this._mensagem.texto = error;    \n    }\n\n    importaNegociacoes() {\n        this._service\n            .importa(this._listaNegociacoes.negociacoes)\n            .then(negociacoes => negociacoes.forEach(negociacao => {\n                this._service\n                    .cadastrar(negociacao)\n                    .then(() => {\n                        this._listaNegociacoes.adiciona(negociacao)\n                        this._mensagem.texto = \"Negociações do período importadas\"\n                    })\n                    .catch(error => this._mensagem.texto = error);\n            }))\n            .catch(error => this._mensagem.texto = error);\n    }\n\n    ordena(coluna) {\n        if (this._ordemAtual === coluna) {\n            this._listaNegociacoes.inverteOrdem();\n        }\n\n        this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\n        this._ordemAtual = coluna;\n    }\n\n    /* Estados de requisição da biblioteca XMLHttpRequest \n        0 - Requisição não iniciada\n        1 - Conexão com o servidor estabelecida\n        2 - Requisição recebida\n        3 - Processando requisição\n        4 - Requisição concluída\n    */\n}"]}