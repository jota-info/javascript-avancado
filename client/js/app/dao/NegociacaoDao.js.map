{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","Promise","resolve","reject","cursor","transaction","objectStore","openCursor","negociacoes","onsuccess","atual","e","target","result","dado","value","push","_data","_quantidade","_valor","continue","onerror","console","error","negociacao","request","add","name","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;iDAEY;AAAA;;AACT,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,SAAS,MAAKL,WAAL,CACRM,WADQ,CACI,CAAC,MAAKL,MAAN,CADJ,EACmB,WADnB,EAERM,WAFQ,CAEI,MAAKN,MAFT,EAGRO,UAHQ,EAAb;;AAKA,gCAAMC,cAAc,EAApB;;AAEAJ,mCAAOK,SAAP,GAAmB,aAAK;AACpB,oCAAIC,QAAQC,EAAEC,MAAF,CAASC,MAArB;;AAEA,oCAAG,CAACH,KAAJ,EAAW;AACPR,4CAAQM,WAAR;AACA;AACH;;AAED,oCAAIM,OAAOJ,MAAMK,KAAjB;AACAP,4CAAYQ,IAAZ,CAAiB,IAAIpB,UAAJ,CAAekB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAT,sCAAMU,QAAN;AACH,6BAXD;;AAaAhB,mCAAOiB,OAAP,GAAiB,UAACV,CAAD,EAAO;AACpBW,wCAAQC,KAAR,CAAcZ,EAAEC,MAAF,CAASW,KAAvB;AACApB,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAzBM,CAAP;AA0BH;;;6CAEQqB,U,EAAY;AAAA;;AACjB,+BAAO,IAAIvB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIsB,UAAU,OAAK1B,WAAL,CACTM,WADS,CACG,CAAC,OAAKL,MAAN,CADH,EACkB,WADlB,EAETM,WAFS,CAEG,OAAKN,MAFR,EAGT0B,GAHS,CAGLF,UAHK,CAAd;;AAKAC,oCACKhB,SADL,GACiB;AAAA,uCAAMP,SAAN;AAAA,6BADjB;;AAGAuB,oCACKJ,OADL,GACe;AAAA,uCAAMlB,OAAOQ,EAAEC,MAAF,CAASW,KAAT,CAAeI,IAAtB,CAAN;AAAA,6BADf;AAEH,yBAXM,CAAP;AAYH;;;iDAEY;AAAA;;AACT,+BAAO,IAAI1B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIsB,UAAU,OAAK1B,WAAL,CACTM,WADS,CACG,CAAC,OAAKL,MAAN,CADH,EACkB,WADlB,EAETM,WAFS,CAEG,OAAKN,MAFR,EAGT4B,KAHS,EAAd;;AAKAH,oCAAQhB,SAAR,GAAoB;AAAA,uCAAKP,QAAQ,mCAAR,CAAL;AAAA,6BAApB;;AAEAuB,oCAAQJ,OAAR,GAAkB;AAAA,uCAAKlB,OAAO,0CAAP,CAAL;AAAA,6BAAlB;AACH,yBATM,CAAP;AAUH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoDao {\n\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    listaTodos() {\n        return new Promise((resolve, reject) => {\n            let cursor = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n            \n            const negociacoes = [];\n\n            cursor.onsuccess = e => {\n                let atual = e.target.result;\n\n                if(!atual) {\n                    resolve(negociacoes);\n                    return;\n                }\n\n                let dado = atual.value;\n                negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n                atual.continue();\n            };\n\n            cursor.onerror = (e) => {\n                console.error(e.target.error);\n                reject('Não foi possível listar as negociações');\n            };\n        });\n    }\n\n    adiciona(negociacao) {\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n            request\n                .onsuccess = e => (resolve());\n            \n            request\n                .onerror = e => (reject(e.target.error.name));\n        });\n    }\n\n    apagaTodos() {\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n            \n            request.onsuccess = e => resolve('Negociações removidas com sucesso');\n\n            request.onerror = e => reject('Houve um problema ao remover negociações');\n        });\n    }\n}"]}