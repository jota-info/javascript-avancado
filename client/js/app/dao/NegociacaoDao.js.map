{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","Promise","resolve","reject","cursor","transaction","objectStore","openCursor","negociacoes","onsuccess","atual","e","target","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","onerror","console","error","negociacao","request","add","name","clear"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;qCAEY;AAAA;;AACT,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,SAAS,MAAKL,WAAL,CACRM,WADQ,CACI,CAAC,MAAKL,MAAN,CADJ,EACmB,WADnB,EAERM,WAFQ,CAEI,MAAKN,MAFT,EAGRO,UAHQ,EAAb;;AAKA,oBAAMC,cAAc,EAApB;;AAEAJ,uBAAOK,SAAP,GAAmB,aAAK;AACpB,wBAAIC,QAAQC,EAAEC,MAAF,CAASC,MAArB;;AAEA,wBAAG,CAACH,KAAJ,EAAW;AACPR,gCAAQM,WAAR;AACA;AACH;;AAED,wBAAIM,OAAOJ,MAAMK,KAAjB;AACAP,gCAAYQ,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;AACAV,0BAAMW,QAAN;AACH,iBAXD;;AAaAjB,uBAAOkB,OAAP,GAAiB,UAACX,CAAD,EAAO;AACpBY,4BAAQC,KAAR,CAAcb,EAAEC,MAAF,CAASY,KAAvB;AACArB,2BAAO,wCAAP;AACH,iBAHD;AAIH,aAzBM,CAAP;AA0BH;;;iCAEQsB,U,EAAY;AAAA;;AACjB,mBAAO,IAAIxB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIuB,UAAU,OAAK3B,WAAL,CACTM,WADS,CACG,CAAC,OAAKL,MAAN,CADH,EACkB,WADlB,EAETM,WAFS,CAEG,OAAKN,MAFR,EAGT2B,GAHS,CAGLF,UAHK,CAAd;;AAKAC,wBACKjB,SADL,GACiB;AAAA,2BAAMP,SAAN;AAAA,iBADjB;;AAGAwB,wBACKJ,OADL,GACe;AAAA,2BAAMnB,OAAOQ,EAAEC,MAAF,CAASY,KAAT,CAAeI,IAAtB,CAAN;AAAA,iBADf;AAEH,aAXM,CAAP;AAYH;;;qCAEY;AAAA;;AACT,mBAAO,IAAI3B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIuB,UAAU,OAAK3B,WAAL,CACTM,WADS,CACG,CAAC,OAAKL,MAAN,CADH,EACkB,WADlB,EAETM,WAFS,CAEG,OAAKN,MAFR,EAGT6B,KAHS,EAAd;;AAKAH,wBAAQjB,SAAR,GAAoB;AAAA,2BAAKP,QAAQ,mCAAR,CAAL;AAAA,iBAApB;;AAEAwB,wBAAQJ,OAAR,GAAkB;AAAA,2BAAKnB,OAAO,0CAAP,CAAL;AAAA,iBAAlB;AACH,aATM,CAAP;AAUH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\n\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    listaTodos() {\n        return new Promise((resolve, reject) => {\n            let cursor = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n            \n            const negociacoes = [];\n\n            cursor.onsuccess = e => {\n                let atual = e.target.result;\n\n                if(!atual) {\n                    resolve(negociacoes);\n                    return;\n                }\n\n                let dado = atual.value;\n                negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n                atual.continue();\n            };\n\n            cursor.onerror = (e) => {\n                console.error(e.target.error);\n                reject('Não foi possível listar as negociações');\n            };\n        });\n    }\n\n    adiciona(negociacao) {\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n            request\n                .onsuccess = e => (resolve());\n            \n            request\n                .onerror = e => (reject(e.target.error.name));\n        });\n    }\n\n    apagaTodos() {\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n            \n            request.onsuccess = e => resolve('Negociações removidas com sucesso');\n\n            request.onerror = e => reject('Houve um problema ao remover negociações');\n        });\n    }\n}"]}