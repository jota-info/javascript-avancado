{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","texto","test","Date","split","map","number","index","parseInt","data","getDate","getMonth","getFullYear"],"mappings":";;;;;;;;IAAMA,U;AAEF,0BAAc;AAAA;;AACV,cAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACH;;;;sCAEoBC,K,EAAO;AACxB,gBAAG,CAAC,oBAAoBC,IAApB,CAAyBD,KAAzB,CAAJ,EACI,MAAM,IAAID,KAAJ,CAAU,kCAAV,CAAN;;AAEJ,sDAAWG,IAAX,mCACOF,MACFG,KADE,CACI,GADJ,EAEFC,GAFE,CAEE,UAACC,MAAD,EAASC,KAAT;AAAA,uBAAmBA,UAAU,CAAV,GAAcC,SAASF,MAAT,IAAmB,CAAjC,GAAqCE,SAASF,MAAT,CAAxD;AAAA,aAFF,CADP;AAKH;;;sCAEoBG,I,EAAM;AACvB,mBAAUA,KAAKC,OAAL,EAAV,UAA6BD,KAAKE,QAAL,KAAkB,CAA/C,UAAqDF,KAAKG,WAAL,EAArD;AACH","file":"DateHelper.js","sourcesContent":["class DateHelper {\n\n    constructor() {\n        throw new Error('DateHelper nÃ£o pode ser instanciada');\n    }\n\n    static textoParaData(texto) {\n        if(!/\\d{4}-\\d{2}-\\d{2}/.test(texto))\n            throw new Error('Deve estar no formato aaaa-mm-dd');\n\n        return new Date(\n            ...texto\n            .split('-')\n            .map((number, index) => index === 1 ? parseInt(number) - 1 : parseInt(number))\n        );\n    }\n\n    static dataParaTexto(data) {\n        return `${data.getDate()}/${(data.getMonth() + 1)}/${data.getFullYear()}`;\n    }\n}"]}