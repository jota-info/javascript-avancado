{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","resolve","reject","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","error","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","reduce","arrayAchatado","array","concat","negociacao","getConnection","connection","dao","adiciona","Error","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\nimport { ConnectionFactory } from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obterNegociacoesDaSemana() {\n        return new Promise((resolve, reject) => {\n            this._http\n                .get('negociacoes/semana')\n                .then(negociacoes => {\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(error => {\n                    console.error(error);\n                    reject('Não foi possível obter as negociações da semana');\n                })\n        });\n    }\n\n    obterNegociacoesDaSemanaAnterior() {\n        return new Promise((resolve, reject) => {\n            this._http\n                .get('negociacoes/anterior')\n                .then(negociacoes => {\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(error => {\n                    console.error(error);\n                    reject('Não foi possível obter as negociações da semana anterior');\n                })\n        });\n    }\n\n    obterNegociacoesDaSemanaRetrasada() {\n         return new Promise((resolve, reject) => {\n             this._http\n                 .get('negociacoes/retrasada')\n                 .then(negociacoes => {\n                     resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                 })\n                 .catch(error => {\n                     console.error(error);\n                     reject('Não foi possível obter as negociações da semana retrasada');\n                 })\n         });\n    }\n\n    obterNegociacoes() {\n        return new Promise((resolve, reject) => {\n           Promise.all([\n                this.obterNegociacoesDaSemana(),\n                this.obterNegociacoesDaSemanaAnterior(),\n                this.obterNegociacoesDaSemanaRetrasada()\n            ])\n            .then(negociacoes => {\n                resolve(negociacoes\n                    .reduce((arrayAchatado, array) => arrayAchatado.concat(array), []));\n            })\n            .catch(error => {\n                reject(error);\n            });\n        });\n    }\n\n    cadastrar(negociacao) {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação cadastrada com sucesso!')\n            .catch(error => { throw new Error(error) });\n    }\n\n    lista() {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(error => {\n                throw new Error('Não foi possível listar as negociações');\n            })\n    }\n\n    apaga() {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações apagadas com sucesso!')\n            .catch(error => {\n                throw new Error(error);\n            })\n    }\n\n    importa(listaAtual) {\n        return this.obterNegociacoes()\n            .then(negociacoes =>\n                negociacoes.filter(negociacao =>\n                    !listaAtual.some(negociacaoExistente =>\n                        JSON.stringify(negociacaoExistente) === JSON.stringify(negociacao))\n                )\n            )\n            .catch(error => {\n                throw new Error('Não foi possível importar negociações');\n            })\n    }\n}"]}